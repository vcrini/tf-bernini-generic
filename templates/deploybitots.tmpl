version: 0.2
env:
  variables:
    AWS_CONTAINER_NAME: ${aws_container_name}
    AWS_CONTAINER_PORT: ${aws_container_port}
    AWS_DESIRED_COUNT: ${aws_desired_count}
    AWS_ECS_CLUSTER: ${aws_ecs_cluster}
    AWS_SECURITY_GROUP: "${aws_security_group}"
    AWS_SERVICE_NAME: ${aws_service_name}
    AWS_STREAM_PREFIX: ${aws_stream_prefix}
    AWS_SUBNET: "${aws_subnet}"
    AWS_TARGET_GROUP_ARN: ${aws_target_group_arn}
    DEPLOYMENT_MAX_PERCENT: ${deployment_max_percent}
    DEPLOYMENT_MIN_HEALTHY_PERCENT: ${deployment_min_healthy_percent}
    ECS_IMAGE_PULL_BEHAVIOR: ${ecs_image_pull_behavior}
    TASK_ROLE_ARN: ${task_role_arn}
    application_name: ${repository_name}
    environment: ${environment}
    image_repo: ${image_repo} 
    image_repo_name: ${image_repo_name} 
    ENV: ${environment}
    %{ for config_key, config_value in container_env }${config_key}: ${config_value} 
    %{ endfor ~}

  exported-variables:
    - environment
    - ENV
    %{ for config_key, config_value in container_env }- ${config_key}
    %{ endfor ~}

phases:
  pre_build:
    commands:
     - echo "[ECHO] deploying STEP at $(date)"
     - export ecr_repositories=(%{ for r in ecr_repositories ~}'${r}' %{ endfor ~})
     - tag=`cat tag`
     - git clone https://github.com/vcrini/aws-utilities  -b 1.0   --depth=1 utilities
     - app_image_version=v`grep -Po '(?<=^version=).+' build.txt`
     - ecr_urls=()
     - |
       for ((i=0; i<$${#ecr_repositories[@]}; i++))
       do
         echo "ecr $${ecr_repositories[$i]}:"
         repo=`utilities/ecr_image_check.sh $image_repo $${ecr_repositories[$i]} $app_image_version`
         echo "repo->$repo"
         image_version=`utilities/remove_snapshot.sh $app_image_version` 
         echo "image_version->$image_version"
         repo=$repo:$app_image_version
         echo "repo->$repo"
         ecr_urls+=($repo)
       done
       export app=$${ecr_urls[0]}
       export web=$${ecr_urls[1]}
       export crono=$${ecr_urls[2]}
       export frontend=$${ecr_urls[3]}
       echo "app -> $app"
       echo "web -> $web"
       echo "crono -> $crono"
       echo "frontend -> $frontend"
       echo "-"
       echo $${ecr_urls[0]}
       echo "--"
     - CMD="utilities/ecs-cli compose --cluster $AWS_ECS_CLUSTER --project-name $AWS_SERVICE_NAME$version_count --file docker-compose.yml --file docker-compose.aws.yml --ecs-params ecs-params.yml service up --deployment-max-percent $DEPLOYMENT_MAX_PERCENT --deployment-min-healthy-percent $DEPLOYMENT_MIN_HEALTHY_PERCENT  --target-group-arn $AWS_TARGET_GROUP_ARN --container-name $AWS_CONTAINER_NAME --container-port $AWS_CONTAINER_PORT --force-deployment --tags $tag --launch-type FARGATE"
     - echo $CMD
     - exec $CMD
     - |-
       if [ "$AWS_DESIRED_COUNT" -gt 0 ]; then
          CMD="utilities/ecs-cli compose --cluster $AWS_ECS_CLUSTER --project-name $AWS_SERVICE_NAME$version_count service scale --deployment-max-percent $DEPLOYMENT_MAX_PERCENT --deployment-min-healthy-percent $DEPLOYMENT_MIN_HEALTHY_PERCENT $AWS_DESIRED_COUNT"
          echo $CMD
          exec $CMD
       fi
